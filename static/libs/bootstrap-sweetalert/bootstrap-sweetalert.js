
(function(r,f) {
	var a=f();
	if(typeof a!=='object')return;
	var e=[typeof module==='object'&&typeof module.exports==='object'?module.exports:null,typeof window!=='undefined'?window:null,r&&r!==window?r:null];
	for(var i in a){e[0]&&(e[0][i]=a[i]);e[1]&&i!=='__esModule'&&(e[1][i] = a[i]);e[2]&&(e[2][i]=a[i]);}
})(this,function(){
	return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./libs/bootstrap-sweetalert/bootstrap-sweetalert.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./libs/bootstrap-sweetalert/bootstrap-sweetalert.js":
/*!***********************************************************!*\
  !*** ./libs/bootstrap-sweetalert/bootstrap-sweetalert.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ../../node_modules/bootstrap-sweetalert/dev/sweetalert.es6.js */ \"./node_modules/bootstrap-sweetalert/dev/sweetalert.es6.js\");\n\n\n//# sourceURL=webpack:///./libs/bootstrap-sweetalert/bootstrap-sweetalert.js?");

/***/ }),

/***/ "./node_modules/bootstrap-sweetalert/dev/modules/default-params.js":
/*!*************************************************************************!*\
  !*** ./node_modules/bootstrap-sweetalert/dev/modules/default-params.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar defaultParams = {\n  title: '',\n  text: '',\n  type: null,\n  allowOutsideClick: false,\n  showConfirmButton: true,\n  showCancelButton: false,\n  closeOnConfirm: true,\n  closeOnCancel: true,\n  confirmButtonText: 'OK',\n  confirmButtonClass: 'btn-primary',\n  cancelButtonText: 'Cancel',\n  cancelButtonClass: 'btn-default',\n  containerClass: '',\n  titleClass: '',\n  textClass: '',\n  imageUrl: null,\n  imageSize: null,\n  timer: null,\n  customClass: '',\n  html: false,\n  animation: true,\n  allowEscapeKey: true,\n  inputType: 'text',\n  inputPlaceholder: '',\n  inputValue: '',\n  showLoaderOnConfirm: false\n};\n\nexports.default = defaultParams;\n\n//# sourceURL=webpack:///./node_modules/bootstrap-sweetalert/dev/modules/default-params.js?");

/***/ }),

/***/ "./node_modules/bootstrap-sweetalert/dev/modules/handle-click.js":
/*!***********************************************************************!*\
  !*** ./node_modules/bootstrap-sweetalert/dev/modules/handle-click.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.handleCancel = exports.handleConfirm = exports.handleButton = undefined;\n\nvar _handleSwalDom = __webpack_require__(/*! ./handle-swal-dom */ \"./node_modules/bootstrap-sweetalert/dev/modules/handle-swal-dom.js\");\n\nvar _handleDom = __webpack_require__(/*! ./handle-dom */ \"./node_modules/bootstrap-sweetalert/dev/modules/handle-dom.js\");\n\n/*\n * User clicked on \"Confirm\"/\"OK\" or \"Cancel\"\n */\nvar handleButton = function handleButton(event, params, modal) {\n  var e = event || window.event;\n  var target = e.target || e.srcElement;\n\n  var targetedConfirm = target.className.indexOf('confirm') !== -1;\n  var targetedOverlay = target.className.indexOf('sweet-overlay') !== -1;\n  var modalIsVisible = (0, _handleDom.hasClass)(modal, 'visible');\n  var doneFunctionExists = params.doneFunction && modal.getAttribute('data-has-done-function') === 'true';\n\n  // Since the user can change the background-color of the confirm button programmatically,\n  // we must calculate what the color should be on hover/active\n  var normalColor, hoverColor, activeColor;\n  if (targetedConfirm && params.confirmButtonColor) {\n    normalColor = params.confirmButtonColor;\n    hoverColor = colorLuminance(normalColor, -0.04);\n    activeColor = colorLuminance(normalColor, -0.14);\n  }\n\n  function shouldSetConfirmButtonColor(color) {\n    if (targetedConfirm && params.confirmButtonColor) {\n      target.style.backgroundColor = color;\n    }\n  }\n\n  switch (e.type) {\n    case 'click':\n      var clickedOnModal = modal === target;\n      var clickedOnModalChild = (0, _handleDom.isDescendant)(modal, target);\n\n      // Ignore click outside if allowOutsideClick is false\n      if (!clickedOnModal && !clickedOnModalChild && modalIsVisible && !params.allowOutsideClick) {\n        break;\n      }\n\n      if (targetedConfirm && doneFunctionExists && modalIsVisible) {\n        handleConfirm(modal, params);\n      } else if (doneFunctionExists && modalIsVisible || targetedOverlay) {\n        handleCancel(modal, params);\n      } else if ((0, _handleDom.isDescendant)(modal, target) && target.tagName === 'BUTTON') {\n        sweetAlert.close();\n      }\n      break;\n  }\n};\n\n/*\n *  User clicked on \"Confirm\"/\"OK\"\n */\nvar handleConfirm = function handleConfirm(modal, params) {\n  var callbackValue = true;\n\n  if ((0, _handleDom.hasClass)(modal, 'show-input')) {\n    callbackValue = modal.querySelector('input').value;\n\n    if (!callbackValue) {\n      callbackValue = '';\n    }\n  }\n\n  params.doneFunction(callbackValue);\n\n  if (params.closeOnConfirm) {\n    sweetAlert.close();\n  }\n  // Disable cancel and confirm button if the parameter is true\n  if (params.showLoaderOnConfirm) {\n    sweetAlert.disableButtons();\n  }\n};\n\n/*\n *  User clicked on \"Cancel\"\n */\nvar handleCancel = function handleCancel(modal, params) {\n  // Check if callback function expects a parameter (to track cancel actions)\n  var functionAsStr = String(params.doneFunction).replace(/\\s/g, '');\n  var functionHandlesCancel = functionAsStr.substring(0, 9) === 'function(' && functionAsStr.substring(9, 10) !== ')';\n\n  if (functionHandlesCancel) {\n    params.doneFunction(false);\n  }\n\n  if (params.closeOnCancel) {\n    sweetAlert.close();\n  }\n};\n\nexports.handleButton = handleButton;\nexports.handleConfirm = handleConfirm;\nexports.handleCancel = handleCancel;\n\n//# sourceURL=webpack:///./node_modules/bootstrap-sweetalert/dev/modules/handle-click.js?");

/***/ }),

/***/ "./node_modules/bootstrap-sweetalert/dev/modules/handle-dom.js":
/*!*********************************************************************!*\
  !*** ./node_modules/bootstrap-sweetalert/dev/modules/handle-dom.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar hasClass = function hasClass(elem, className) {\n  return new RegExp(' ' + className + ' ').test(' ' + elem.className + ' ');\n};\n\nvar addClass = function addClass(elem, className) {\n  if (!hasClass(elem, className)) {\n    elem.className += ' ' + className;\n  }\n};\n\nvar removeClass = function removeClass(elem, className) {\n  var newClass = ' ' + elem.className.replace(/[\\t\\r\\n]/g, ' ') + ' ';\n  if (hasClass(elem, className)) {\n    while (newClass.indexOf(' ' + className + ' ') >= 0) {\n      newClass = newClass.replace(' ' + className + ' ', ' ');\n    }\n    elem.className = newClass.replace(/^\\s+|\\s+$/g, '');\n  }\n};\n\nvar escapeHtml = function escapeHtml(str) {\n  var div = document.createElement('div');\n  div.appendChild(document.createTextNode(str));\n  return div.innerHTML;\n};\n\nvar _show = function _show(elem) {\n  elem.style.opacity = '';\n  elem.style.display = 'block';\n};\n\nvar show = function show(elems) {\n  if (elems && !elems.length) {\n    return _show(elems);\n  }\n  for (var i = 0; i < elems.length; ++i) {\n    _show(elems[i]);\n  }\n};\n\nvar _hide = function _hide(elem) {\n  elem.style.opacity = '';\n  elem.style.display = 'none';\n};\n\nvar hide = function hide(elems) {\n  if (elems && !elems.length) {\n    return _hide(elems);\n  }\n  for (var i = 0; i < elems.length; ++i) {\n    _hide(elems[i]);\n  }\n};\n\nvar isDescendant = function isDescendant(parent, child) {\n  var node = child.parentNode;\n  while (node !== null) {\n    if (node === parent) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n  return false;\n};\n\nvar getTopMargin = function getTopMargin(elem) {\n  elem.style.left = '-9999px';\n  elem.style.display = 'block';\n\n  var height = elem.clientHeight,\n      padding;\n  if (typeof getComputedStyle !== \"undefined\") {\n    // IE 8\n    padding = parseInt(getComputedStyle(elem).getPropertyValue('padding-top'), 10);\n  } else {\n    padding = parseInt(elem.currentStyle.padding);\n  }\n\n  elem.style.left = '';\n  elem.style.display = 'none';\n  return '-' + parseInt((height + padding) / 2) + 'px';\n};\n\nvar fadeIn = function fadeIn(elem, interval) {\n  if (+elem.style.opacity < 1) {\n    interval = interval || 16;\n    elem.style.opacity = 0;\n    elem.style.display = 'block';\n    var last = +new Date();\n    var tick = function tick() {\n      elem.style.opacity = +elem.style.opacity + (new Date() - last) / 100;\n      last = +new Date();\n\n      if (+elem.style.opacity < 1) {\n        setTimeout(tick, interval);\n      }\n    };\n    tick();\n  }\n  elem.style.display = 'block'; //fallback IE8\n};\n\nvar fadeOut = function fadeOut(elem, interval) {\n  interval = interval || 16;\n  elem.style.opacity = 1;\n  var last = +new Date();\n  var tick = function tick() {\n    elem.style.opacity = +elem.style.opacity - (new Date() - last) / 100;\n    last = +new Date();\n\n    if (+elem.style.opacity > 0) {\n      setTimeout(tick, interval);\n    } else {\n      elem.style.display = 'none';\n    }\n  };\n  tick();\n};\n\nvar fireClick = function fireClick(node) {\n  // Taken from http://www.nonobtrusive.com/2011/11/29/programatically-fire-crossbrowser-click-event-with-javascript/\n  // Then fixed for today's Chrome browser.\n  if (typeof MouseEvent === 'function') {\n    // Up-to-date approach\n    var mevt = new MouseEvent('click', {\n      view: window,\n      bubbles: false,\n      cancelable: true\n    });\n    node.dispatchEvent(mevt);\n  } else if (document.createEvent) {\n    // Fallback\n    var evt = document.createEvent('MouseEvents');\n    evt.initEvent('click', false, false);\n    node.dispatchEvent(evt);\n  } else if (document.createEventObject) {\n    node.fireEvent('onclick');\n  } else if (typeof node.onclick === 'function') {\n    node.onclick();\n  }\n};\n\nvar stopEventPropagation = function stopEventPropagation(e) {\n  // In particular, make sure the space bar doesn't scroll the main window.\n  if (typeof e.stopPropagation === 'function') {\n    e.stopPropagation();\n    e.preventDefault();\n  } else if (window.event && window.event.hasOwnProperty('cancelBubble')) {\n    window.event.cancelBubble = true;\n  }\n};\n\nexports.hasClass = hasClass;\nexports.addClass = addClass;\nexports.removeClass = removeClass;\nexports.escapeHtml = escapeHtml;\nexports._show = _show;\nexports.show = show;\nexports._hide = _hide;\nexports.hide = hide;\nexports.isDescendant = isDescendant;\nexports.getTopMargin = getTopMargin;\nexports.fadeIn = fadeIn;\nexports.fadeOut = fadeOut;\nexports.fireClick = fireClick;\nexports.stopEventPropagation = stopEventPropagation;\n\n//# sourceURL=webpack:///./node_modules/bootstrap-sweetalert/dev/modules/handle-dom.js?");

/***/ }),

/***/ "./node_modules/bootstrap-sweetalert/dev/modules/handle-key.js":
/*!*********************************************************************!*\
  !*** ./node_modules/bootstrap-sweetalert/dev/modules/handle-key.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _handleDom = __webpack_require__(/*! ./handle-dom */ \"./node_modules/bootstrap-sweetalert/dev/modules/handle-dom.js\");\n\nvar _handleSwalDom = __webpack_require__(/*! ./handle-swal-dom */ \"./node_modules/bootstrap-sweetalert/dev/modules/handle-swal-dom.js\");\n\nvar handleKeyDown = function handleKeyDown(event, params, modal) {\n  var e = event || window.event;\n  var keyCode = e.keyCode || e.which;\n\n  var $okButton = modal.querySelector('button.confirm');\n  var $cancelButton = modal.querySelector('button.cancel');\n  var $modalButtons = modal.querySelectorAll('button[tabindex]');\n\n  if ([9, 13, 32, 27].indexOf(keyCode) === -1) {\n    // Don't do work on keys we don't care about.\n    return;\n  }\n\n  var $targetElement = e.target || e.srcElement;\n\n  var btnIndex = -1; // Find the button - note, this is a nodelist, not an array.\n  for (var i = 0; i < $modalButtons.length; i++) {\n    if ($targetElement === $modalButtons[i]) {\n      btnIndex = i;\n      break;\n    }\n  }\n\n  if (keyCode === 9) {\n    // TAB\n    if (btnIndex === -1) {\n      // No button focused. Jump to the confirm button.\n      $targetElement = $okButton;\n    } else {\n      // Cycle to the next button\n      if (btnIndex === $modalButtons.length - 1) {\n        $targetElement = $modalButtons[0];\n      } else {\n        $targetElement = $modalButtons[btnIndex + 1];\n      }\n    }\n\n    (0, _handleDom.stopEventPropagation)(e);\n    $targetElement.focus();\n\n    if (params.confirmButtonColor) {\n      (0, _handleSwalDom.setFocusStyle)($targetElement, params.confirmButtonColor);\n    }\n  } else {\n    if (keyCode === 13) {\n      if ($targetElement.tagName === 'INPUT') {\n        $targetElement = $okButton;\n        $okButton.focus();\n      }\n\n      if (btnIndex === -1) {\n        // ENTER/SPACE clicked outside of a button.\n        $targetElement = $okButton;\n      } else {\n        // Do nothing - let the browser handle it.\n        $targetElement = undefined;\n      }\n    } else if (keyCode === 27 && params.allowEscapeKey === true) {\n      $targetElement = $cancelButton;\n      (0, _handleDom.fireClick)($targetElement, e);\n    } else {\n      // Fallback - let the browser handle it.\n      $targetElement = undefined;\n    }\n  }\n};\n\nexports.default = handleKeyDown;\n\n//# sourceURL=webpack:///./node_modules/bootstrap-sweetalert/dev/modules/handle-key.js?");

/***/ }),

/***/ "./node_modules/bootstrap-sweetalert/dev/modules/handle-swal-dom.js":
/*!**************************************************************************!*\
  !*** ./node_modules/bootstrap-sweetalert/dev/modules/handle-swal-dom.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fixVerticalPosition = exports.resetInputError = exports.resetInput = exports.openModal = exports.getInput = exports.getOverlay = exports.getModal = exports.sweetAlertInitialize = undefined;\n\nvar _handleDom = __webpack_require__(/*! ./handle-dom */ \"./node_modules/bootstrap-sweetalert/dev/modules/handle-dom.js\");\n\nvar _defaultParams = __webpack_require__(/*! ./default-params */ \"./node_modules/bootstrap-sweetalert/dev/modules/default-params.js\");\n\nvar _defaultParams2 = _interopRequireDefault(_defaultParams);\n\nvar _injectedHtml = __webpack_require__(/*! ./injected-html */ \"./node_modules/bootstrap-sweetalert/dev/modules/injected-html.js\");\n\nvar _injectedHtml2 = _interopRequireDefault(_injectedHtml);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar modalClass = '.sweet-alert';\nvar overlayClass = '.sweet-overlay';\n\n/*\n * Add modal + overlay to DOM\n */\n\n\nvar sweetAlertInitialize = function sweetAlertInitialize() {\n  var sweetWrap = document.createElement('div');\n  sweetWrap.innerHTML = _injectedHtml2.default;\n\n  // Append elements to body\n  while (sweetWrap.firstChild) {\n    document.body.appendChild(sweetWrap.firstChild);\n  }\n};\n\n/*\n * Get DOM element of modal\n */\nvar getModal = function getModal() {\n  var $modal = document.querySelector(modalClass);\n\n  if (!$modal) {\n    sweetAlertInitialize();\n    $modal = getModal();\n  }\n\n  return $modal;\n};\n\n/*\n * Get DOM element of input (in modal)\n */\nvar getInput = function getInput() {\n  var $modal = getModal();\n  if ($modal) {\n    return $modal.querySelector('input');\n  }\n};\n\n/*\n * Get DOM element of overlay\n */\nvar getOverlay = function getOverlay() {\n  return document.querySelector(overlayClass);\n};\n\n/*\n * Animation when opening modal\n */\nvar openModal = function openModal(callback) {\n  var $modal = getModal();\n  (0, _handleDom.fadeIn)(getOverlay(), 10);\n  (0, _handleDom.show)($modal);\n  (0, _handleDom.addClass)($modal, 'showSweetAlert');\n  (0, _handleDom.removeClass)($modal, 'hideSweetAlert');\n\n  window.previousActiveElement = document.activeElement;\n  var $okButton = $modal.querySelector('button.confirm');\n  $okButton.focus();\n\n  setTimeout(function () {\n    (0, _handleDom.addClass)($modal, 'visible');\n  }, 500);\n\n  var timer = $modal.getAttribute('data-timer');\n\n  if (timer !== 'null' && timer !== '') {\n    var timerCallback = callback;\n    $modal.timeout = setTimeout(function () {\n      var doneFunctionExists = (timerCallback || null) && $modal.getAttribute('data-has-done-function') === 'true';\n      if (doneFunctionExists) {\n        timerCallback(null);\n      } else {\n        sweetAlert.close();\n      }\n    }, timer);\n  }\n};\n\n/*\n * Reset the styling of the input\n * (for example if errors have been shown)\n */\nvar resetInput = function resetInput() {\n  var $modal = getModal();\n  var $input = getInput();\n\n  (0, _handleDom.removeClass)($modal, 'show-input');\n  $input.value = _defaultParams2.default.inputValue;\n  $input.setAttribute('type', _defaultParams2.default.inputType);\n  $input.setAttribute('placeholder', _defaultParams2.default.inputPlaceholder);\n\n  resetInputError();\n};\n\nvar resetInputError = function resetInputError(event) {\n  // If press enter => ignore\n  if (event && event.keyCode === 13) {\n    return false;\n  }\n\n  var $modal = getModal();\n\n  var $errorIcon = $modal.querySelector('.sa-input-error');\n  (0, _handleDom.removeClass)($errorIcon, 'show');\n\n  var $errorContainer = $modal.querySelector('.form-group');\n  (0, _handleDom.removeClass)($errorContainer, 'has-error');\n};\n\n/*\n * Set \"margin-top\"-property on modal based on its computed height\n */\nvar fixVerticalPosition = function fixVerticalPosition() {\n  var $modal = getModal();\n  $modal.style.marginTop = (0, _handleDom.getTopMargin)(getModal());\n};\n\nexports.sweetAlertInitialize = sweetAlertInitialize;\nexports.getModal = getModal;\nexports.getOverlay = getOverlay;\nexports.getInput = getInput;\nexports.openModal = openModal;\nexports.resetInput = resetInput;\nexports.resetInputError = resetInputError;\nexports.fixVerticalPosition = fixVerticalPosition;\n\n//# sourceURL=webpack:///./node_modules/bootstrap-sweetalert/dev/modules/handle-swal-dom.js?");

/***/ }),

/***/ "./node_modules/bootstrap-sweetalert/dev/modules/injected-html.js":
/*!************************************************************************!*\
  !*** ./node_modules/bootstrap-sweetalert/dev/modules/injected-html.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar injectedHTML =\n\n// Dark overlay\n\"<div class=\\\"sweet-overlay\\\" tabIndex=\\\"-1\\\"></div>\" +\n\n// Modal\n\"<div class=\\\"sweet-alert\\\" tabIndex=\\\"-1\\\">\" +\n\n// Error icon\n\"<div class=\\\"sa-icon sa-error\\\">\\n      <span class=\\\"sa-x-mark\\\">\\n        <span class=\\\"sa-line sa-left\\\"></span>\\n        <span class=\\\"sa-line sa-right\\\"></span>\\n      </span>\\n    </div>\" +\n\n// Warning icon\n\"<div class=\\\"sa-icon sa-warning\\\">\\n      <span class=\\\"sa-body\\\"></span>\\n      <span class=\\\"sa-dot\\\"></span>\\n    </div>\" +\n\n// Info icon\n\"<div class=\\\"sa-icon sa-info\\\"></div>\" +\n\n// Success icon\n\"<div class=\\\"sa-icon sa-success\\\">\\n      <span class=\\\"sa-line sa-tip\\\"></span>\\n      <span class=\\\"sa-line sa-long\\\"></span>\\n\\n      <div class=\\\"sa-placeholder\\\"></div>\\n      <div class=\\\"sa-fix\\\"></div>\\n    </div>\" + \"<div class=\\\"sa-icon sa-custom\\\"></div>\" +\n\n// Title, text and input\n\"<h2>Title</h2>\\n    <p class=\\\"lead text-muted\\\">Text</p>\\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" tabIndex=\\\"3\\\" />\\n      <span class=\\\"sa-input-error help-block\\\">\\n        <span class=\\\"glyphicon glyphicon-exclamation-sign\\\"></span> <span class=\\\"sa-help-text\\\">Not valid</span>\\n      </span>\\n    </div>\" +\n\n// Cancel and confirm buttons\n\"<div class=\\\"sa-button-container\\\">\\n      <button class=\\\"cancel btn btn-lg\\\" tabIndex=\\\"2\\\">Cancel</button>\\n      <div class=\\\"sa-confirm-button-container\\\">\\n        <button class=\\\"confirm btn btn-lg\\\" tabIndex=\\\"1\\\">OK</button>\" +\n\n// Loading animation\n\"<div class=\\\"la-ball-fall\\\">\\n          <div></div>\\n          <div></div>\\n          <div></div>\\n        </div>\\n      </div>\\n    </div>\" +\n\n// End of modal\n\"</div>\";\n\nexports.default = injectedHTML;\n\n//# sourceURL=webpack:///./node_modules/bootstrap-sweetalert/dev/modules/injected-html.js?");

/***/ }),

/***/ "./node_modules/bootstrap-sweetalert/dev/modules/set-params.js":
/*!*********************************************************************!*\
  !*** ./node_modules/bootstrap-sweetalert/dev/modules/set-params.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(/*! ./utils */ \"./node_modules/bootstrap-sweetalert/dev/modules/utils.js\");\n\nvar _handleSwalDom = __webpack_require__(/*! ./handle-swal-dom */ \"./node_modules/bootstrap-sweetalert/dev/modules/handle-swal-dom.js\");\n\nvar _handleDom = __webpack_require__(/*! ./handle-dom */ \"./node_modules/bootstrap-sweetalert/dev/modules/handle-dom.js\");\n\nvar alertTypes = ['error', 'warning', 'info', 'success', 'input', 'prompt'];\n\n/*\n * Set type, text and actions on modal\n */\nvar setParameters = function setParameters(params) {\n  var modal = (0, _handleSwalDom.getModal)();\n\n  var $title = modal.querySelector('h2');\n  var $text = modal.querySelector('p');\n  var $cancelBtn = modal.querySelector('button.cancel');\n  var $confirmBtn = modal.querySelector('button.confirm');\n\n  /*\n   * Title\n   */\n  $title.innerHTML = params.html ? params.title : (0, _handleDom.escapeHtml)(params.title).split('\\n').join('<br>');\n\n  /*\n   * Text\n   */\n  $text.innerHTML = params.html ? params.text : (0, _handleDom.escapeHtml)(params.text || '').split('\\n').join('<br>');\n  if (params.text) (0, _handleDom.show)($text);\n\n  /*\n   * Custom class\n   */\n  if (params.customClass) {\n    (0, _handleDom.addClass)(modal, params.customClass);\n    modal.setAttribute('data-custom-class', params.customClass);\n  } else {\n    // Find previously set classes and remove them\n    var customClass = modal.getAttribute('data-custom-class');\n    (0, _handleDom.removeClass)(modal, customClass);\n    modal.setAttribute('data-custom-class', '');\n  }\n\n  /*\n   * Icon\n   */\n  (0, _handleDom.hide)(modal.querySelectorAll('.sa-icon'));\n\n  if (params.type && !(0, _utils.isIE8)()) {\n\n    var validType = false;\n\n    for (var i = 0; i < alertTypes.length; i++) {\n      if (params.type === alertTypes[i]) {\n        validType = true;\n        break;\n      }\n    }\n\n    if (!validType) {\n      logStr('Unknown alert type: ' + params.type);\n      return false;\n    }\n\n    var typesWithIcons = ['success', 'error', 'warning', 'info'];\n    var $icon = void 0;\n\n    if (typesWithIcons.indexOf(params.type) !== -1) {\n      $icon = modal.querySelector('.sa-icon.' + 'sa-' + params.type);\n      (0, _handleDom.show)($icon);\n    }\n\n    var $input = (0, _handleSwalDom.getInput)();\n\n    // Animate icon\n    switch (params.type) {\n\n      case 'success':\n        (0, _handleDom.addClass)($icon, 'animate');\n        (0, _handleDom.addClass)($icon.querySelector('.sa-tip'), 'animateSuccessTip');\n        (0, _handleDom.addClass)($icon.querySelector('.sa-long'), 'animateSuccessLong');\n        break;\n\n      case 'error':\n        (0, _handleDom.addClass)($icon, 'animateErrorIcon');\n        (0, _handleDom.addClass)($icon.querySelector('.sa-x-mark'), 'animateXMark');\n        break;\n\n      case 'warning':\n        (0, _handleDom.addClass)($icon, 'pulseWarning');\n        (0, _handleDom.addClass)($icon.querySelector('.sa-body'), 'pulseWarningIns');\n        (0, _handleDom.addClass)($icon.querySelector('.sa-dot'), 'pulseWarningIns');\n        break;\n\n      case 'input':\n      case 'prompt':\n        $input.setAttribute('type', params.inputType);\n        $input.value = params.inputValue;\n        $input.setAttribute('placeholder', params.inputPlaceholder);\n        (0, _handleDom.addClass)(modal, 'show-input');\n        setTimeout(function () {\n          $input.focus();\n          $input.addEventListener('keyup', swal.resetInputError);\n        }, 400);\n        break;\n    }\n  }\n\n  /*\n   * Custom image\n   */\n  if (params.imageUrl) {\n    var $customIcon = modal.querySelector('.sa-icon.sa-custom');\n\n    $customIcon.style.backgroundImage = 'url(' + params.imageUrl + ')';\n    (0, _handleDom.show)($customIcon);\n\n    var _imgWidth = 80;\n    var _imgHeight = 80;\n\n    if (params.imageSize) {\n      var dimensions = params.imageSize.toString().split('x');\n      var imgWidth = dimensions[0];\n      var imgHeight = dimensions[1];\n\n      if (!imgWidth || !imgHeight) {\n        logStr('Parameter imageSize expects value with format WIDTHxHEIGHT, got ' + params.imageSize);\n      } else {\n        _imgWidth = imgWidth;\n        _imgHeight = imgHeight;\n      }\n    }\n\n    $customIcon.setAttribute('style', $customIcon.getAttribute('style') + 'width:' + _imgWidth + 'px; height:' + _imgHeight + 'px');\n  }\n\n  /*\n   * Show cancel button?\n   */\n  modal.setAttribute('data-has-cancel-button', params.showCancelButton);\n  if (params.showCancelButton) {\n    $cancelBtn.style.display = 'inline-block';\n  } else {\n    (0, _handleDom.hide)($cancelBtn);\n  }\n\n  /*\n   * Show confirm button?\n   */\n  modal.setAttribute('data-has-confirm-button', params.showConfirmButton);\n  if (params.showConfirmButton) {\n    $confirmBtn.style.display = 'inline-block';\n  } else {\n    (0, _handleDom.hide)($confirmBtn);\n  }\n\n  /*\n   * Custom text on cancel/confirm buttons\n   */\n  if (params.cancelButtonText) {\n    $cancelBtn.innerHTML = (0, _handleDom.escapeHtml)(params.cancelButtonText);\n  }\n  if (params.confirmButtonText) {\n    $confirmBtn.innerHTML = (0, _handleDom.escapeHtml)(params.confirmButtonText);\n  }\n\n  /*\n   * Reset confirm buttons to default class (Ugly fix)\n   */\n  $confirmBtn.className = 'confirm btn btn-lg';\n\n  /*\n   * Attach selected class to the sweet alert modal\n   */\n  (0, _handleDom.addClass)(modal, params.containerClass);\n\n  /*\n   * Set confirm button to selected class\n   */\n  (0, _handleDom.addClass)($confirmBtn, params.confirmButtonClass);\n\n  /*\n   * Set cancel button to selected class\n   */\n  (0, _handleDom.addClass)($cancelBtn, params.cancelButtonClass);\n\n  /*\n   * Set title to selected class\n   */\n  (0, _handleDom.addClass)($title, params.titleClass);\n\n  /*\n   * Set text to selected class\n   */\n  (0, _handleDom.addClass)($text, params.textClass);\n\n  /*\n   * Allow outside click\n   */\n  modal.setAttribute('data-allow-outside-click', params.allowOutsideClick);\n\n  /*\n   * Callback function\n   */\n  var hasDoneFunction = params.doneFunction ? true : false;\n  modal.setAttribute('data-has-done-function', hasDoneFunction);\n\n  /*\n   * Animation\n   */\n  if (!params.animation) {\n    modal.setAttribute('data-animation', 'none');\n  } else if (typeof params.animation === 'string') {\n    modal.setAttribute('data-animation', params.animation); // Custom animation\n  } else {\n    modal.setAttribute('data-animation', 'pop');\n  }\n\n  /*\n   * Timer\n   */\n  modal.setAttribute('data-timer', params.timer);\n};\n\nexports.default = setParameters;\n\n//# sourceURL=webpack:///./node_modules/bootstrap-sweetalert/dev/modules/set-params.js?");

/***/ }),

/***/ "./node_modules/bootstrap-sweetalert/dev/modules/utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/bootstrap-sweetalert/dev/modules/utils.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Allow user to pass their own params\n */\nvar extend = function extend(a, b) {\n  for (var key in b) {\n    if (b.hasOwnProperty(key)) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n\n/*\n * Check if the user is using Internet Explorer 8 (for fallbacks)\n */\nvar isIE8 = function isIE8() {\n  return window.attachEvent && !window.addEventListener;\n};\n\n/*\n * IE compatible logging for developers\n */\nvar logStr = function logStr(string) {\n  if (window.console) {\n    // IE...\n    window.console.log('SweetAlert: ' + string);\n  }\n};\n\nexports.extend = extend;\nexports.isIE8 = isIE8;\nexports.logStr = logStr;\n\n//# sourceURL=webpack:///./node_modules/bootstrap-sweetalert/dev/modules/utils.js?");

/***/ }),

/***/ "./node_modules/bootstrap-sweetalert/dev/sweetalert.es6.js":
/*!*****************************************************************!*\
  !*** ./node_modules/bootstrap-sweetalert/dev/sweetalert.es6.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; // SweetAlert\n// 2014-2015 (c) - Tristan Edwards\n// github.com/t4t5/sweetalert\n\n/*\n * jQuery-like functions for manipulating the DOM\n */\n\n\n/*\n * Handy utilities\n */\n\n\n/*\n *  Handle sweetAlert's DOM elements\n */\n\n\n// Handle button events and keyboard events\n\n\n// Default values\n\n\nvar _handleDom = __webpack_require__(/*! ./modules/handle-dom */ \"./node_modules/bootstrap-sweetalert/dev/modules/handle-dom.js\");\n\nvar _utils = __webpack_require__(/*! ./modules/utils */ \"./node_modules/bootstrap-sweetalert/dev/modules/utils.js\");\n\nvar _handleSwalDom = __webpack_require__(/*! ./modules/handle-swal-dom */ \"./node_modules/bootstrap-sweetalert/dev/modules/handle-swal-dom.js\");\n\nvar _handleClick = __webpack_require__(/*! ./modules/handle-click */ \"./node_modules/bootstrap-sweetalert/dev/modules/handle-click.js\");\n\nvar _handleKey = __webpack_require__(/*! ./modules/handle-key */ \"./node_modules/bootstrap-sweetalert/dev/modules/handle-key.js\");\n\nvar _handleKey2 = _interopRequireDefault(_handleKey);\n\nvar _defaultParams = __webpack_require__(/*! ./modules/default-params */ \"./node_modules/bootstrap-sweetalert/dev/modules/default-params.js\");\n\nvar _defaultParams2 = _interopRequireDefault(_defaultParams);\n\nvar _setParams = __webpack_require__(/*! ./modules/set-params */ \"./node_modules/bootstrap-sweetalert/dev/modules/set-params.js\");\n\nvar _setParams2 = _interopRequireDefault(_setParams);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Remember state in cases where opening and handling a modal will fiddle with it.\n * (We also use window.previousActiveElement as a global variable)\n */\nvar previousWindowKeyDown;\nvar lastFocusedButton;\n\n/*\n * Global sweetAlert function\n * (this is what the user calls)\n */\nvar sweetAlert, _swal;\n\nexports.default = sweetAlert = _swal = function swal() {\n  var customizations = arguments[0];\n\n  (0, _handleDom.addClass)(document.body, 'stop-scrolling');\n  (0, _handleSwalDom.resetInput)();\n\n  /*\n   * Use argument if defined or default value from params object otherwise.\n   * Supports the case where a default value is boolean true and should be\n   * overridden by a corresponding explicit argument which is boolean false.\n   */\n  function argumentOrDefault(key) {\n    var args = customizations;\n    return args[key] === undefined ? _defaultParams2.default[key] : args[key];\n  }\n\n  if (customizations === undefined) {\n    (0, _utils.logStr)('SweetAlert expects at least 1 attribute!');\n    return false;\n  }\n\n  var params = (0, _utils.extend)({}, _defaultParams2.default);\n\n  switch (typeof customizations === 'undefined' ? 'undefined' : _typeof(customizations)) {\n\n    // Ex: swal(\"Hello\", \"Just testing\", \"info\");\n    case 'string':\n      params.title = customizations;\n      params.text = arguments[1] || '';\n      params.type = arguments[2] || '';\n      break;\n\n    // Ex: swal({ title:\"Hello\", text: \"Just testing\", type: \"info\" });\n    case 'object':\n      if (customizations.title === undefined) {\n        (0, _utils.logStr)('Missing \"title\" argument!');\n        return false;\n      }\n\n      params.title = customizations.title;\n\n      for (var customName in _defaultParams2.default) {\n        params[customName] = argumentOrDefault(customName);\n      }\n\n      // Show \"Confirm\" instead of \"OK\" if cancel button is visible\n      params.confirmButtonText = params.showCancelButton ? 'Confirm' : _defaultParams2.default.confirmButtonText;\n      params.confirmButtonText = argumentOrDefault('confirmButtonText');\n\n      // Callback function when clicking on \"OK\"/\"Cancel\"\n      params.doneFunction = arguments[1] || null;\n\n      break;\n\n    default:\n      (0, _utils.logStr)('Unexpected type of argument! Expected \"string\" or \"object\", got ' + (typeof customizations === 'undefined' ? 'undefined' : _typeof(customizations)));\n      return false;\n\n  }\n\n  (0, _setParams2.default)(params);\n  (0, _handleSwalDom.fixVerticalPosition)();\n  (0, _handleSwalDom.openModal)(arguments[1]);\n\n  // Modal interactions\n  var modal = (0, _handleSwalDom.getModal)();\n\n  /*\n   * Make sure all modal buttons respond to all events\n   */\n  var $buttons = modal.querySelectorAll('button');\n  var buttonEvents = ['onclick'];\n  var onButtonEvent = function onButtonEvent(e) {\n    return (0, _handleClick.handleButton)(e, params, modal);\n  };\n\n  for (var btnIndex = 0; btnIndex < $buttons.length; btnIndex++) {\n    for (var evtIndex = 0; evtIndex < buttonEvents.length; evtIndex++) {\n      var btnEvt = buttonEvents[evtIndex];\n      $buttons[btnIndex][btnEvt] = onButtonEvent;\n    }\n  }\n\n  // Clicking outside the modal dismisses it (if allowed by user)\n  (0, _handleSwalDom.getOverlay)().onclick = onButtonEvent;\n\n  previousWindowKeyDown = window.onkeydown;\n\n  var onKeyEvent = function onKeyEvent(e) {\n    return (0, _handleKey2.default)(e, params, modal);\n  };\n  window.onkeydown = onKeyEvent;\n\n  window.onfocus = function () {\n    // When the user has focused away and focused back from the whole window.\n    setTimeout(function () {\n      // Put in a timeout to jump out of the event sequence.\n      // Calling focus() in the event sequence confuses things.\n      if (lastFocusedButton !== undefined) {\n        lastFocusedButton.focus();\n        lastFocusedButton = undefined;\n      }\n    }, 0);\n  };\n\n  // Show alert with enabled buttons always\n  _swal.enableButtons();\n};\n\n/*\n * Set default params for each popup\n * @param {Object} userParams\n */\n\n\nsweetAlert.setDefaults = _swal.setDefaults = function (userParams) {\n  if (!userParams) {\n    throw new Error('userParams is required');\n  }\n  if ((typeof userParams === 'undefined' ? 'undefined' : _typeof(userParams)) !== 'object') {\n    throw new Error('userParams has to be a object');\n  }\n\n  (0, _utils.extend)(_defaultParams2.default, userParams);\n};\n\n/*\n * Animation when closing modal\n */\nsweetAlert.close = _swal.close = function () {\n  var modal = (0, _handleSwalDom.getModal)();\n\n  (0, _handleDom.fadeOut)((0, _handleSwalDom.getOverlay)(), 5);\n  (0, _handleDom.fadeOut)(modal, 5);\n  (0, _handleDom.removeClass)(modal, 'showSweetAlert');\n  (0, _handleDom.addClass)(modal, 'hideSweetAlert');\n  (0, _handleDom.removeClass)(modal, 'visible');\n\n  /*\n   * Reset icon animations\n   */\n  var $successIcon = modal.querySelector('.sa-icon.sa-success');\n  (0, _handleDom.removeClass)($successIcon, 'animate');\n  (0, _handleDom.removeClass)($successIcon.querySelector('.sa-tip'), 'animateSuccessTip');\n  (0, _handleDom.removeClass)($successIcon.querySelector('.sa-long'), 'animateSuccessLong');\n\n  var $errorIcon = modal.querySelector('.sa-icon.sa-error');\n  (0, _handleDom.removeClass)($errorIcon, 'animateErrorIcon');\n  (0, _handleDom.removeClass)($errorIcon.querySelector('.sa-x-mark'), 'animateXMark');\n\n  var $warningIcon = modal.querySelector('.sa-icon.sa-warning');\n  (0, _handleDom.removeClass)($warningIcon, 'pulseWarning');\n  (0, _handleDom.removeClass)($warningIcon.querySelector('.sa-body'), 'pulseWarningIns');\n  (0, _handleDom.removeClass)($warningIcon.querySelector('.sa-dot'), 'pulseWarningIns');\n\n  // Reset custom class (delay so that UI changes aren't visible)\n  setTimeout(function () {\n    var customClass = modal.getAttribute('data-custom-class');\n    (0, _handleDom.removeClass)(modal, customClass);\n  }, 300);\n\n  // Make page scrollable again\n  (0, _handleDom.removeClass)(document.body, 'stop-scrolling');\n\n  // Reset the page to its previous state\n  window.onkeydown = previousWindowKeyDown;\n  if (window.previousActiveElement) {\n    window.previousActiveElement.focus();\n  }\n  lastFocusedButton = undefined;\n  clearTimeout(modal.timeout);\n\n  return true;\n};\n\n/*\n * Validation of the input field is done by user\n * If something is wrong => call showInputError with errorMessage\n */\nsweetAlert.showInputError = _swal.showInputError = function (errorMessage) {\n  var modal = (0, _handleSwalDom.getModal)();\n\n  var $errorIcon = modal.querySelector('.sa-input-error');\n  (0, _handleDom.addClass)($errorIcon, 'show');\n\n  var $errorContainer = modal.querySelector('.form-group');\n  (0, _handleDom.addClass)($errorContainer, 'has-error');\n\n  $errorContainer.querySelector('.sa-help-text').innerHTML = errorMessage;\n\n  setTimeout(function () {\n    sweetAlert.enableButtons();\n  }, 1);\n\n  modal.querySelector('input').focus();\n};\n\n/*\n * Reset input error DOM elements\n */\nsweetAlert.resetInputError = _swal.resetInputError = function (event) {\n  // If press enter => ignore\n  if (event && event.keyCode === 13) {\n    return false;\n  }\n\n  var $modal = (0, _handleSwalDom.getModal)();\n\n  var $errorIcon = $modal.querySelector('.sa-input-error');\n  (0, _handleDom.removeClass)($errorIcon, 'show');\n\n  var $errorContainer = $modal.querySelector('.form-group');\n  (0, _handleDom.removeClass)($errorContainer, 'has-error');\n};\n\n/*\n * Disable confirm and cancel buttons\n */\nsweetAlert.disableButtons = _swal.disableButtons = function (event) {\n  var modal = (0, _handleSwalDom.getModal)();\n  var $confirmButton = modal.querySelector('button.confirm');\n  var $cancelButton = modal.querySelector('button.cancel');\n  $confirmButton.disabled = true;\n  $cancelButton.disabled = true;\n};\n\n/*\n * Enable confirm and cancel buttons\n */\nsweetAlert.enableButtons = _swal.enableButtons = function (event) {\n  var modal = (0, _handleSwalDom.getModal)();\n  var $confirmButton = modal.querySelector('button.confirm');\n  var $cancelButton = modal.querySelector('button.cancel');\n  $confirmButton.disabled = false;\n  $cancelButton.disabled = false;\n};\n\nif (typeof window !== 'undefined') {\n  // The 'handle-click' module requires\n  // that 'sweetAlert' was set as global.\n  window.sweetAlert = window.swal = sweetAlert;\n} else {\n  (0, _utils.logStr)('SweetAlert is a frontend module!');\n}\n\n//# sourceURL=webpack:///./node_modules/bootstrap-sweetalert/dev/sweetalert.es6.js?");

/***/ })

/******/ });
});;